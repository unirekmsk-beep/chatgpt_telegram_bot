import time
import asyncio
print("=== BOT LOGIC TEST STARTED ===")

try:
    print("1. Importing bot...")
    from bot.bot import run_bot
    print("‚úÖ Bot imported")
    
    print("2. Testing bot startup...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Ç–∞—Å–∫–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    async def test_bot():
        try:
            print("üîÑ Starting bot...")
            await run_bot()
        except Exception as e:
            print(f"‚ùå Bot runtime error: {e}")
            import traceback
            traceback.print_exc()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    print("‚è∞ Running bot with timeout...")
    try:
        asyncio.run(asyncio.wait_for(test_bot(), timeout=10.0))
    except asyncio.TimeoutError:
        print("‚è∞ Bot timeout - might be running normally")
    except Exception as e:
        print(f"‚ùå Bot failed: {e}")
        import traceback
        traceback.print_exc()
    
    print("üéâ BOT LOGIC TEST COMPLETED")
    
except Exception as e:
    print(f"üí• CRITICAL ERROR: {e}")
    import traceback
    traceback.print_exc()

print("=== TEST FINISHED ===")
time.sleep(5)
